@using Blazor.FileReader
@using System.IO
@inject IFileReaderService fileReaderService

<div>
    <label>@Label</label>
    <div>
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png" />
    </div>
</div>
<div>
    @if (ImageBase64 != null)
    {
        <div>
            <div style="margin:10px">
                <img src="data:image/jpeg;base64, @ImageBase64" style="width: 400px"/>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string Label { get; set; }
    [Parameter] public EventCallback<string> OnSelectedImage { get; set; }
    [Parameter] public byte[] Image { get; set; }

    /// <summary>
    /// Wird gebraucht um das Bild auf der Website anzuzeigen
    /// </summary>
    public string ImageBase64
    {
        get
        {
            if (Image == null)
            {
                return null;
            }

            return Convert.ToBase64String(Image);
        }
    }

    private ElementReference inputElement;

    /// <summary>
    /// Holt das geuploadete Image und speichert es in das Image Objekt
    /// </summary>
    /// <returns></returns>
    async Task ImageFileSelected()
    {
        foreach (IFileReference file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                Image = new byte[memoryStream.Length];
                memoryStream.Read(Image, 0, (int)memoryStream.Length);
                await OnSelectedImage.InvokeAsync(ImageBase64);
            }
        }
    }
}
